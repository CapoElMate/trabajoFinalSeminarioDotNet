@page "/prestamos"
@using Biblioteca.UI.Data;
@using Biblioteca.Repositorios;

@inject ListarPrestamosUseCase ListarPrestamosUseCase;
@inject ListarLibrosUseCase ListarLibrosUseCase;

@inject VerLibroUseCase VerLibroUseCase;

@inject ListarPersonasUseCase ListarPersonasUseCase;
@inject EncontrarPersonaUseCase EncontrarPersonaUseCase;

@inject ListarPrestamosUseCase ListarPrestamosUseCase;
@inject RealizarPrestamoUseCase RealizarPrestamoUseCase;
@inject DevolverLibroUseCase DevolverLibroUseCase;

<PageTitle>Prestamos</PageTitle>
<h1> Prestamos </h1>


<PrestamosIngresar @ref="prestIngresar" />
<PrestamosDevolver @ref="prestDevolver"/>

<button class="btn btn-success" @onclick="()=>AbrirCuadroCrear(new Prestamo())">
        
    <span>Dar de Alta un Prestamo</span>

</button>


<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>ID PERSONA</th>
            <th>NOMBRE PERSONA</th>
            <th>APELLIDO PERSONA</th>
            <th>ID LIBRO</th>
            <th>TITULO LIBRO</th>
            <th>FECHA PRESTAMO</th>
            <th>FECHA DE DEVOLUCION</th>
            <th>SE DEVOLVIO EN BUEN ESTADO</th>
            <th>OPCIONES</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var prest in _lista)
        {
            <tr>
                <td>@prest.id</td>
                <td>@prest.PersonaId</td>                
                <td>@EncontrarPersonaUseCase.Ejecutar(prest.PersonaId).nombre</td>
                <td>@EncontrarPersonaUseCase.Ejecutar(prest.PersonaId).apellido</td>
                <td>@prest.LibroId</td>
                <td>@VerLibroUseCase.Ejecutar(prest.LibroId).titulo</td>
                <td>@prest.fechaDePrestamo.ToString()</td>
                
                @if(prest.estaDevuelto)
                {
                    <td>@prest.fechaDeDevolucion</td>
                    
                    <td>
                        
                    @if(prest.estaEnBuenEstado){
                        <i class="bi-check-square"  style="font-size: 1.3rem; color: green;"></i>
                    }
                    else{
                        <i class="bi-x-square"  style="font-size: 1.3rem; color: red;"></i>
                    }
                    </td>

                    <td/>

                }else{
                    <td> - </td>
                    <td> - </td>
                    
                    <td>
                        <button class="btn btn-outline-success btn-sm" @onclick="()=>AbrirCuadroDevolver(prest)">
                            <span class="bi bi-journal-check"  style="font-size: 1.3rem; "></span>
                        </button>
                        
                        @* <button class="btn btn-outline-danger btn-sm" @onclick="()=>ConfirmarBorrar(prest)" >
                            <span class="oi oi-trash"></span>
                        </button> *@

                    </td>

                }
                
                
            </tr>
        }

    </tbody>
</table>

@code{
    List<Prestamo> _lista = new List<Prestamo>();
    
    protected override void OnInitialized()
    {
        _lista = ListarPrestamosUseCase.Ejecutar();
    }
    
    PrestamosIngresar prestIngresar = null!;
    PrestamosDevolver prestDevolver = null!;
    
    private void AbrirCuadroCrear(Prestamo prest){
        
            //Console.WriteLine("creando");       
            prestIngresar.OnRellenado = EventCallback.Factory.Create(this, () => Crear(prest));
            prestIngresar.prestamo = prest;
            
            prestIngresar.listaLibros = ListarLibrosUseCase.Ejecutar();
            prestIngresar.listaPersonas = ListarPersonasUseCase.Ejecutar();
            

            prestIngresar.Mostrar();        
    }

    private void Crear(Prestamo prest){
        RealizarPrestamoUseCase.Ejecutar(prest);
        _lista = ListarPrestamosUseCase.Ejecutar();
    }


    private void AbrirCuadroDevolver(Prestamo prest){
        //Console.WriteLine("devolviendo");      
        prestDevolver.OnRellenado = EventCallback.Factory.Create(this, () => Devolver(prest));
        prestDevolver.prestamo = prest; //devuelvo el prestamo
        prestDevolver.Mostrar();
    }

    private void Devolver(Prestamo prest){
        DevolverLibroUseCase.Ejecutar(prest);
        _lista = ListarPrestamosUseCase.Ejecutar();
    }

    
    Persona buscarPersonaId(int idPersona){
        Persona p;
        
        p = EncontrarPersonaUseCase.Ejecutar(idPersona);

        return p;
    }

    Libro buscarLibroId(int idLibro){
        Libro l;
        
        l = VerLibroUseCase.Ejecutar(idLibro);

        return l;
    }

    List<Persona> listarPersonas(){
        List<Persona> lista;

        lista = ListarPersonasUseCase.Ejecutar();

        return lista;
    }

}